apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.versions.compileSdkVersion
    buildToolsVersion rootProject.ext.versions.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.versions.minSdkVersion
        targetSdkVersion rootProject.ext.versions.targetSdkVersion
        versionCode rootProject.ext.versions.versionCode
        versionName rootProject.ext.versions.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

        multiDexEnabled true

        //Arouter路由配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
                includeCompileClasspath = true
            }
        }
    }


    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled = true
    }
}

//解决DataBinding和Kotlin插件有冲突的问题
kapt {
    generateStubs = true
}
dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':data')
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api rootProject.ext.dependencies["appcompat"]
    api rootProject.ext.dependencies["coreKtx"]
    testApi rootProject.ext.dependencies["junit"]
    androidTestApi rootProject.ext.dependencies["test_junit"]
    androidTestApi rootProject.ext.dependencies["test_espresso"]
    api rootProject.ext.dependencies["constraintlayout"]
    api rootProject.ext.dependencies["fragment"]
    api rootProject.ext.dependencies["multidex"]
    api rootProject.ext.dependencies["lifecycle"]
    implementation rootProject.ext.dependencies["roomDb"]
    kapt rootProject.ext.dependencies["roomDbKt"]
    implementation rootProject.ext.dependencies["roomDbKt_Extensions"]
}
